{
  "name": "backend",
  "engines": {
    "npm": "echo 'npm is forbidden - use yarn instead'",
    "yarn": ">= 4"
  },
  "scripts": {
    "compose": "docker --log-level ERROR compose",
    "dev": "dotenv -e .env.dev -o -- yarn dev:start",
    "dev:compose:down": "yarn compose down",
    "dev:compose:kill": "yarn compose kill && echo \n",
    "dev:compose:start": "yarn compose start",
    "dev:compose:stop": "yarn compose stop",
    "dev:compose:up": "yarn compose up --detach",
    "dev:start": "yarn echo:environment && yarn dev:db:start && nodemon --watch src --ext ts; yarn dev:compose:stop",
    "dev:db": "dotenv -e .env.dev -o -- yarn dev:db:start",
    "dev:db:start": "yarn echo:environment:db && yarn dev:compose:up && yarn dev:compose:start && yarn wait:db:port && yarn echo:adminer:url && yarn echo:postgres:port && yarn migrate:dev",
    "echo:adminer:url": "echo \n ðŸ™€ Postgres Adminer: http://localhost:$ADMINER_PORT ðŸ™€ \n",
    "echo:database:url": "echo \n ðŸ˜¶ Using $DATABASE_URL ðŸ˜¶ \n",
    "echo:environment": "echo \n Environment: $NODE_ENV  \n",
    "echo:environment:db": "echo \n Database environment: $NODE_ENV  \n",
    "echo:postgres:port": "echo \n ðŸ˜¼ Postgres Port: $DATABASE_PORT ðŸ˜¼ \n",
    "echo:wait:db:port": "echo \n Waiting for: Postgres: $DATABASE_PORT \n",
    "format": "prettier . --write --log-level error",
    "lint": "tsc --noemit & eslint",
    "migrate": "dotenv -e .env.test -o -- yarn migrate:start",
    "migrate:start": "yarn dev:db:start; yarn dev:compose:down",
    "migrate:dev": "yarn echo:database:url && prisma migrate dev",
    "migrate:prod": "yarn echo:database:url && prisma migrate deploy",
    "migrate:reset": "yarn echo:database:url && prisma migrate reset",
    "prepare": "husky",
    "start": "tsx src",
    "test": "dotenv -e .env.test -o -- yarn test:start",
    "test:compose:down": "yarn compose --file compose.test.yml down",
    "test:compose:start": "yarn compose --file compose.test.yml start",
    "test:compose:stop": "yarn compose --file compose.test.yml stop",
    "test:compose:up": "yarn compose --file compose.test.yml up --detach",
    "test:start": "yarn echo:environment && jest --openHandlesTimeout",
    "test:db": "dotenv -e .env.test -o -- yarn test:db:start",
    "test:db:start": "yarn echo:environment:db && yarn test:compose:up && yarn test:compose:start && yarn wait:db:port && yarn echo:postgres:port && yarn migrate:reset --force",
    "wait:db:port": "yarn echo:wait:db:port && wait-on tcp:$DATABASE_PORT"
  },
  "packageManager": "yarn@4.5.2",
  "dependencies": {
    "@prisma/client": "6.1.0",
    "argon2": "^0.41.1",
    "cookie-parser": "^1.4.7",
    "express": "^4.21.2",
    "jsonwebtoken": "^9.0.2",
    "nodemailer": "^6.9.16",
    "prisma": "^6.1.0",
    "zod": "^3.24.1"
  },
  "devDependencies": {
    "@babel/core": "^7.26.0",
    "@babel/preset-env": "^7.26.0",
    "@babel/preset-typescript": "^7.26.0",
    "@eslint/js": "^9.17.0",
    "@faker-js/faker": "^9.3.0",
    "@types/babel__core": "^7",
    "@types/babel__preset-env": "^7",
    "@types/cookie-parser": "^1",
    "@types/express": "^5.0.0",
    "@types/jest": "^29.5.14",
    "@types/jsonwebtoken": "^9.0.7",
    "@types/nodemailer": "^6",
    "@types/supertest": "^6.0.2",
    "babel-jest": "^29.7.0",
    "dotenv-cli": "^8.0.0",
    "eslint": "^9.17.0",
    "eslint-config-prettier": "^9.1.0",
    "globals": "^15.14.0",
    "husky": "^9.1.7",
    "jest": "^29.7.0",
    "nodemon": "^3.1.9",
    "prettier": "^3.4.2",
    "supertest": "^7.0.0",
    "tsx": "^4.19.2",
    "typescript": "^5.7.2",
    "typescript-eslint": "^8.18.1",
    "wait-on": "^8.0.1"
  }
}
